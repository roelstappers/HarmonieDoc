#!/bin/bash
#
#  Building of the surfex climate file for 
#  the requested domain
#


. header.sh

[[ -s $WRK ]] || $MKDIR $WRK
cd $WRK
WDIR=`hostname`$$
Workdir $WDIR

trap "Trapbody $WDIR $1 ; exit 1" 0

# Check input arguments
case $1 in
 lfi)
  TYPE=lfi
  CSURF_FILETYPE='LFI'
  CPGDFILE='PGD_prel' 
  ;;
 fa)
  CSURF_FILETYPE='FA'
  CPGDFILE='PGD_prel'
  TYPE=fa
  ;;
 *)
  echo "Unknown option in Prepare_pgd $1"
  exit 1
 ;; 
esac

# Get Prepare_pgd parameters from input                                                                    
LNDLUXG=${2?"Give NDLUXG in config_exp.h before running Prepare_pgd"}
LNDGUXG=${3?"Give NDGUXG in config_exp.h before running Prepare_pgd"}
LGSIZE=${4?"Give GSIZE in config_exp.h before running Prepare_pgd"}
LCLIMDIR=${5?"Give CLIMDIR in config_exp.h before running Prepare_pgd"}

###################################
# Check if the climate file exist #
###################################

CLARCH=$HM_EXP/$( echo $LCLIMDIR |  perl -pe "s/(.*)\/($EXP)\/(.*)/\$3/" )

if [[ -s ${LCLIMDIR}/${CPGDFILE}.$TYPE ]]
then
 echo "Surfex climate file found... exit Prepare_pgd"
 trap - 0
 exit
else
 if [[ ! -s $LCLIMDIR ]] ; then
   $MKDIR $LCLIMDIR || { 
     sleep 1 ; [[ -s $LCLIMDIR ]] || $MKDIR $LCLIMDIR || exit
   }
 fi
 if [ "$TYPE" == "lfi" ]; then
    Access_lpfs -from $CLARCH/Const.Clim.sfx $LCLIMDIR/Const.Clim.sfx || echo "Const.Clim.sfx not found in archive"
 fi
 Access_lpfs -from $CLARCH/${CPGDFILE}.$TYPE $LCLIMDIR/${CPGDFILE}.$TYPE && \
 { echo "Surfex climate file found... exit Prepare_pgd" ; trap - 0 ; exit ; }

 echo "No climate file found, let's create it" ;

fi 

####################################
# No climate file found, create it #
####################################


# Orography input
YTOPO=${TOPO_SOURCE-gtopo30}

if [ $YTOPO = "gmted2010" ] ; then

 [[ -s $CLIMDIR/$YTOPO.dir ]] || { Prepare_gmted || exit 1 ; }
 ln -sf $CLIMDIR/$YTOPO.dir .
 ln -sf $CLIMDIR/$YTOPO.hdr .

else
 ln -sf $PGD_DATA_PATH/$YTOPO.dir .
 ln -sf $PGD_DATA_PATH/$YTOPO.hdr .
fi

# Soil texture data
case $SOIL_TEXTURE_VERSION in	
 FAO)
   YSAND="sand_fao"
   YCLAY="clay_fao"
   ;;
 HWSD_v2)
   YSAND="SAND_HWSD_MOY_v2"
   YCLAY="CLAY_HWSD_MOY_v2"
   ;;
 *)
   echo "No such option for SOIL_TEXTURE_VERSION: ${SOIL_TEXTURE_VERSION}"
   exit 1
   ;;
esac

# Land use 
case $ECOCLIMAP_VERSION in	
 1.0|1.2|1.3|1.4|1.5)
   YCOVER="ECOCLIMAP_I_GLOBAL_V${ECOCLIMAP_VERSION}"
   ;;
 2.0|2.1|2.2|2.2.1)
   YCOVER="ECOCLIMAP_II_EUROP_V${ECOCLIMAP_VERSION}"
   ;;
 *)
   echo "No such option for ECOCLIMAP_VERIONS: $ECOCLIMAP_VERSION"
   exit 1
   ;;
esac

PGD_FILES="$YSAND $YCLAY $YCOVER"

# Check and link the input data
for PGD_FILE in $PGD_FILES ; do
  for PGD_TYPE in hdr dir ; do
   FILE=$PGD_DATA_PATH/$PGD_FILE.$PGD_TYPE
   [[ -s $FILE ]] || { echo "Could not find $FILE" ; exit 1 ; }
   ln -s $FILE .
  done
done

ln -s $CLIMDIR/*.bin .

 NIMAX=$NDLUXG
 NJMAX=$NDGUXG


# Create a namelist needed for PGD generation.
NAMELIST=$WRK/$WDIR/namelist_sfx_pgd
Get_namelist sfx_pgd $NAMELIST
sed -e "s/CSURF_FILETYPE=CSURF_FILETYPE/CSURF_FILETYPE=\"$CSURF_FILETYPE\"/" \
    -e "s/CPGDFILE=CPGDFILE/CPGDFILE=\"$CPGDFILE\"/" \
    -e "s/YCOVER=YCOVER/YCOVER=\"$YCOVER\"/" \
    -e "s/YSAND=YSAND/YSAND=\"$YSAND\"/" \
    -e "s/YCLAY=YCLAY/YCLAY=\"$YCLAY\"/" \
    -e "s/BNIMAX/$LNDLUXG/g" \
    -e "s/BNJMAX/$LNDGUXG/g" \
    -e "s/BXDX/$LGSIZE/g" \
    -e "s/BXDY/$LGSIZE/g" \
    -e "s/YZS=YTOPO/YZS=\"$YTOPO\"/" \
    -e "s/=NIMAX/=$NIMAX/g" \
    -e "s/=NJMAX/=$NJMAX/g" \
    $NAMELIST > OPTIONS.nam

Cat_logs OPTIONS.nam

$MPPGL $BINDIR/PGD || exit

if [[ ! -s $CPGDFILE.$TYPE ]]
then
 echo "Surfex climate file ($CPGDFILE.$TYPE) generation failed... exit Prepare_pgd"
 exit 1
fi 

Cat_logs LISTING_PGD.txt

[[ -s drhook.prof.%d ]] && { tar cvf ${TASK}_prof.tar drhook.prof.* ; mv ${TASK}_prof.tar $ARCHIVE ; }

# Archive
if [ "$HM_EXP" ] ; then
 Access_lpfs -mkdir $CLARCH
 Access_lpfs -to ${CPGDFILE}.$TYPE $CLARCH/${CPGDFILE}.$TYPE || exit
fi

mv ${CPGDFILE}.$TYPE ${LCLIMDIR}/. 

# Normal exit

cd ..
rm -fr $WDIR
trap - 0
exit
